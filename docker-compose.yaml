
services:
  app:
    image: tidyurl
    restart: always
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/rails
      - /rails/tmp
    env_file:
      - .env
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tidyurl.rule=Host(`tidyurl.thinhnw.site`)"  # Replace with your domain
      - "traefik.http.routers.tidyurl.entrypoints=websecure"
      - "traefik.http.routers.tidyurl.tls=true"
      - "traefik.http.routers.tidyurl.tls.certresolver=myresolver"
      - "traefik.http.services.tidyurl.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik_traefik"
    networks:
      - traefik_traefik
      - tidyurl
    command: bash -c "rm -f tmp/pids/server.pid && bin/dev" #bundle exec rails s -b '0.0.0.0' -p 3000"

  cron:
    image: tidyurl
    env_file:
      - .env 
    depends_on:
      - app
    networks:
      - tidyurl
    command: bash -c "gem install whenever && touch log/cron.log && cron && whenever --update-crontab && crontab -l && tail -f log/cron.log"
    volumes:
      - .:/rails
    user: root

  db:
    image: postgres:15
    env_file:
      - db.env
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - tidyurl

volumes:
  db-data:

networks:
  traefik_traefik:
    external: true
  tidyurl:
    driver: bridge